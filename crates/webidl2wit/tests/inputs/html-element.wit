package webidl:my-package-idl;

interface my-interface {
  use wasi:io/poll.{ pollable };
  resource html-element {
    as-element: func() -> element;
    title: func() -> string;
    set-title: func(title: string);
    scroll-height: func() -> s32;
    set-scroll-height: func(scroll-height: s32);
    scroll-top: func() -> s32;
    set-scroll-top: func(scroll-top: s32);
    lang: func() -> string;
    set-lang: func(lang: string);
    dir: func() -> string;
    set-dir: func(dir: string);
    dataset: func() -> dom-string-map;
    inner-text: func() -> string;
    set-inner-text: func(inner-text: string);
    hidden: func() -> bool;
    set-hidden: func(hidden: bool);
    inert: func() -> bool;
    set-inert: func(inert: bool);
    click: func();
    tab-index: func() -> s32;
    set-tab-index: func(tab-index: s32);
    focus: func(options: option<focus-options>);
    blur: func();
    access-key: func() -> string;
    set-access-key: func(access-key: string);
    access-key-label: func() -> string;
    draggable: func() -> bool;
    set-draggable: func(draggable: bool);
    content-editable: func() -> string;
    set-content-editable: func(content-editable: string);
    is-content-editable: func() -> bool;
    spellcheck: func() -> bool;
    set-spellcheck: func(spellcheck: bool);
    style: func() -> css-style-declaration;
    offset-parent: func() -> option<element>;
    offset-top: func() -> s32;
    offset-left: func() -> s32;
    offset-width: func() -> s32;
    offset-height: func() -> s32;
    ontouchstart-subscribe: func() -> pollable;
    ontouchend-subscribe: func() -> pollable;
    ontouchmove-subscribe: func() -> pollable;
    ontouchcancel-subscribe: func() -> pollable;
    as-html-unknown-element: func() -> option<html-unknown-element>;
  }
  resource html-unknown-element {
    as-html-element: func() -> html-element;
  }
}
