package webidl:my-package-idl;

interface my-interface {
  resource html-element {
    constructor();
    title: func() -> string;
    set-title: func(title: string);
    lang: func() -> string;
    set-lang: func(lang: string);
    translate: func() -> bool;
    set-translate: func(translate: bool);
    dir: func() -> string;
    set-dir: func(dir: string);
    hidden: func() -> option<bool-or-f64-or-string>;
    set-hidden: func(hidden: option<bool-or-f64-or-string>);
    inert: func() -> bool;
    set-inert: func(inert: bool);
    click: func();
    access-key: func() -> string;
    set-access-key: func(access-key: string);
    access-key-label: func() -> string;
    draggable: func() -> bool;
    set-draggable: func(draggable: bool);
    spellcheck: func() -> bool;
    set-spellcheck: func(spellcheck: bool);
    writing-suggestions: func() -> string;
    set-writing-suggestions: func(writing-suggestions: string);
    autocapitalize: func() -> string;
    set-autocapitalize: func(autocapitalize: string);
    inner-text: func() -> string;
    set-inner-text: func(inner-text: string);
    outer-text: func() -> string;
    set-outer-text: func(outer-text: string);
    show-popover: func();
    hide-popover: func();
    toggle-popover: func(force: option<bool>) -> bool;
    popover: func() -> option<string>;
    set-popover: func(popover: option<string>);
    as-html-unknown-element: func() -> option<html-unknown-element>;
  }
  variant bool-or-f64-or-string {
    %bool(bool),
    %f64(f64),
    %string(string),
  }
  resource html-unknown-element {
    as-html-element: func() -> html-element;
  }
  value: func() -> bool;
  set-value: func(value: bool);
}
