# https://git-cliff.org/docs/configuration

[changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing spaces
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org

# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat(cli)", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix(cli)", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^doc(cli)", group = "<!-- 3 -->📚 Documentation" },
  { message = "^perf(cli)", group = "<!-- 4 -->⚡ Performance" },
  { message = "^refactor(cli)", group = "<!-- 2 -->🚜 Refactor" },
  { message = "^style(cli)", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test(cli)", group = "<!-- 6 -->🧪 Testing" },
  { message = "^release:", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->⚙️ Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 9 -->◀️ Revert" },
  { message = ".*", group = "<!-- 10 -->💼 Other" },
]

# filter out the commits that are not matched by commit parsers
filter_commits = true

# sort the tags topologically
topo_order = false

# sort the commits inside sections by oldest/newest order
sort_commits = "newest"

# glob pattern for matching git tags
tag_pattern = "webidlwit-v[0-9]*"

# regex for skipping tags
skip_tags = ".*beta.*"
